1. 자바빈즈
2. 자바빈즈 활용
3. 자바 빈즈를 이용한 폼 입력 처리
4. 학생 정보 처리 자바 빈즈
5. 연습문제



1. 자바 빈즈

1.1 자바빈즈 개요

 ㅁ 자바 빈즈란?
  간단히 : 비즈니스 로직부분을 독립적으로 수행하는 하나의 프로그램 단위
  JSP프로그램의 장점 중의 하나는 비즈니스 로직 부분과 프리젠테이션부분을 나누어 코딩할수있다는 점이다.
  그러나 하나의 jsp프로글매 내부에 로직부분의 자바코드와 프레젠테이션부분의 HTML코드가 복잡하게 구성되어있음
  자바빈즈는 비즈니스 로직 부분과 프리젠테이션 부분을 분리해서, 비즈니스 로직 부분을 담당하는 자바 프로그램단위라 할수있음.
  
  - 프리젠테이션 로직이란 말 그래도 보여주기 위한 로직을 말한다. 즉 화면상의 디자인 구성을 위한 로직을 일컫는 말로써, 게시판에서의 표시하기 위한 for(or while)문 등의 사용이 여기에 해당한다.
  - 비즈니스 로직이라는 것은 어떠한 특정한 값을 얻기 위해 데이터의 처리를 수행하는 응용프로그램의 일부를 말한다. 즉 원하는 값을 얻기 위해서 백엔드에서 일어나는 각종 처리를 일컫는 말이다.
  - JSP와 자바 빈즈를 사용하는 구조에서 일반적으로 JSP는 프리젠테이션 로직을 담당하고 자바 빈즈는 비즈니스 로직을 담당한다.
  
  
 ㅁ 자바 빈즈의 구성
  일반 자바 클래스.
  소속변수인 필드와 메소드로 구성되어있음.
  private로 소속변수 선언되며, getter와 setter를 이용함.
  
  
1.2 자바 빈즈 태그
 ㅁ 자바빈즈 생성        : <jsp : useBean id="login" class="ClassName"/>       login이라는 자바빈즈 생성. 클래스는 className
 ㅁ setter 속성값을 전달 : <jsp : setProperty name="login" property="name" param="넘어온 값의 id를 찾아서 그 id의 값으로 지정하기" or value="직접지정"..../>
                                                                             name이라는 소속변수의 값을 설정
 ㅁ getter 속성값을 반환 : <jsp : getProperty name="login" property="name"..../> name이라는 소속변수의 값을 가져오는것

 ㅇ 생성 <jsp : useBean...?의 속성과 값 유형, 설명 
  - id : Jsp 페이지 내에서 자바 빈즈의 참조 변수를 저장하는 변수 이름을 저장 
  - class : 생성할 자바 빈즈의 클래스 이름
  - scope : 자바 빈즈의 유효 범위, 기본 값은 page. page, request, session, application이 범위이자 유일하게 문자열이 아닌 유형임
  
 ㅇ setter 속성 <jsp : setProperty .../>
  - name : 생성에서 사용한 id 값
  - property : 필드에서 해당하는 소속변수의 값을 지정함. * 인경우 모든 패라미터의 값을 지정함
  - param : 속성 property와 같이 쓰임, 지정된 패러미터로 전달받은 패러미터의 이름을 지정 / value 속성 대신에 param 속성을 사용할 수도 있다. 
            param 속성은 request 기본 객체가 간직하고 있는 파라미터 값을 자바빈 객체의 프로퍼티 값으로 지정할 때 사용된다.  param="sign.jsp에서 넘어오는값" 
  - value : 속성 property와 함께 쓰이며, setName(value)에서 value를 뜻함. 프로퍼티 값임,.


 param 추가 설명  
 sign.jsp 파일에서 signProc.jsp로 action을 넘기면..
 signProc.jsp 파일에서
 <jsp:useBean id="객체명" class="bean.member.SignDTO" /> 로 bean 객체를 생성하고...
 해당 객체명으로
 <jsp:setProperty name="dto=객체명" property="클래스의 속성" param="sign.jsp에서 넘어오는값" /> 으로 파라미터 값을 Set 한다. 
 
 <jsp:setProperty name="dto" property="name" value="값" /> 과 같이 직접 값을 set 할 수 도 있다.
  sign.jsp : 값을 id라는 속성으로 넘기면
 signProc.jsp에서 그값을 받아  <jsp:setProperty property="id" name="dto" param="id" /> param='id' 즉 넘어온 값의 속성이 id인것의 값을 받아 설정함.
 
 
 ㅇ getter 속성 <jsp : getProperty.../>
  - name : 생성에서 사용한 id 값
  - property : getName의 name임.
  
 ㅁ 속성 scope의 종류
  - page : 현재의 jsp 페이지 내에서만 사용가능
  - request : request객체가 영향을 미치는 모든 jsp페이지까지 이용가능
  - session : 세션이 유효한 페이지까지 자바 빈즈 이용 가능
  - application : 응용 프로그램의 모든 페이지에서 사용 가능
  
  
1.3 자바 빈즈 태그의 이용
 ㅇ 생성
  <jsp : useBean id="login" class="ClassName"/> == <% ClassName login = new ClassName();%>
  
 ㅇ setter
  <jsp : useBean id="login" class="ClassName"/>
  <jsp : setProperty name ="login" property="name" value="김성민"/> == <% test.setName("김성민");%>
  
  - setter는 4가지중 하나의 형태임
   1. <jsp : setProperty name="login" property="*"/> 넘어오는값을 한번에 싸그리 넣던가
   2. <jsp : setProperty name="login" property="name"/> -- 밑에 설명 있음
   3. <jsp : setProperty name="login" property="name" param="userName"/> 넘어오는 값의 아이디가 userName인 것을 찾아 넘어온값을 넣던가
   4. <jsp : setProperty name="login" property="name" value="김성민"/> 임의로 만들어서 넣던가
   
 2는 == test.setName(request.getParameter("name")); 과 같은 의미임
 3은 == test.setName(request.getParameter("userName")); 
 
 ㅇ getter
 <jsp : useBean id="login" class="ClassName"/>
 <jsp : setProperty name="login" property="name"/> 
 <jsp : getproperty name="login" property="name"/> == <%=login.getName();
 
  
 

